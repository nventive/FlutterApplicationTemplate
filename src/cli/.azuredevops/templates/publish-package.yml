parameters:
- name: pathToSrc
  type: string
  default: '$(Build.SourcesDirectory)/src'
- name: dryRun
  type: boolean
  default: true

steps:
  # We commit the pending changes before publishing the package to avoid the "GitStatusValidator" validation error by pub publish.
  # This is necessary because of this issue: https://github.com/dart-lang/pub/issues/3807.
- script: |
    git config --global user.email "pipeline@azuredevops.com"
    git config --global user.name "Azure DevOps Pipeline"
    git add .
    git commit -m "chore: Auto-commit before publishing package." || echo "No changes to commit."
  displayName: 'Commit pending changes'

- task: FlutterCommand@0
  displayName: 'Flutter Pub Publish Dry Run'
  condition: ${{ parameters.dryRun }}
  inputs:
    projectDirectory: '${{ parameters.pathToSrc }}/cli'
    arguments: 'pub publish --dry-run'
    
- task: DownloadSecureFile@1
  displayName: 'Download Google Cloud Key'
  condition: succeeded()
  inputs:
    secureFile: 'flutter_publisher_gckey.json'
  name: DownloadGCloudKey

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $zipUrl = "https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-windows-x86_64.zip"
      $zipPath = "$(System.DefaultWorkingDirectory)\gcloud.zip"
      $extractPath = "$(System.DefaultWorkingDirectory)\gcloud"

      Invoke-WebRequest -Uri $zipUrl -OutFile $zipPath

      New-Item -ItemType Directory -Path $extractPath -Force

      Expand-Archive -Path $zipPath -DestinationPath $extractPath -Force

      $gcloudPath = "$extractPath\google-cloud-sdk\bin\gcloud.cmd"

      $gcloudDir = [System.IO.Path]::GetDirectoryName($gcloudPath)
      # [System.Environment]::SetEnvironmentVariable("PATH", $env:PATH + ";" + $gcloudDir, [System.EnvironmentVariableTarget]::Machine)
      
      Write-Host "##vso[task.setvariable variable=PATH;]${env:PATH};$gcloudDir";

      Write-Host "Updated PATH: $env:PATH"

      Remove-Item -Path $zipPath -Force
  displayName: 'Install Google Cloud SDK'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: | 
      gcloud auth activate-service-account --key-file=$(DownloadGCloudKey.secureFilePath)
  displayName: 'Activate service account'

- script: |
    gcloud auth print-identity-token --audiences=https://pub.dev | dart pub token add https://pub.dev
    cd ${{ parameters.pathToSrc }}/cli
    dart pub publish --force
  condition: eq(${{ parameters.dryRun }}, false)
  displayName: 'Flutter Pub Publish'